<?xml version='1.0' encoding='UTF-8' ?>

<ui:composition template="/WEB-INF/templates/PlainTemplate.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core">

	<ui:define name="title">Register</ui:define>

	<ui:define name="content">
		<div class="register-box">
			<div class="register-logo">
				<h:form>
					<h:commandLink action="index">
						<b>Admin</b>LTE
					</h:commandLink>
				</h:form>
			</div>
			<div class="register-box-body">
				<p class="login-box-msg">Register a new membership</p>
				<h:form>
					<div class="form-group has-feedback">
						<span class="glyphicon glyphicon-user form-control-feedback"></span>
						<h:inputText id="username"
							value="#{loginBean.studentBean.username}"
							valueChangeListener="#{loginBean.changedUser}"
							class="form-control">
							<!-- Pass-Through-Attribute ersetzen HTML5 Tags -->
							<f:passThroughAttribute name="placeholder" value="Full name" />
						</h:inputText>
						<!-- hier wird die Fehlermedlung zurückgegeben -->
						<h:message for="username" class="alert alert-danger alert-box" />
					</div>
					<div class="form-group has-feedback">
						<h:inputText id="age" value="#{loginBean.studentBean.age}"
							class="form-control">
							<f:passThroughAttribute name="placeholder" value="Age" />
						</h:inputText>
						<h:message for="age" class="alert alert-danger alert-box" />
						<span class="glyphicon glyphicon-envelope form-control-feedback"></span>
					</div>
					<div class="form-group has-feedback">
						<h:selectOneRadio id="geschlecht" required="false"
							value="#{loginBean.studentBean.geschlecht}"
							layout="lineDirection" styleClass="gender-checkbox">
							<f:selectItem itemLabel="weiblich" itemValue="weiblich" />
							<f:selectItem itemLabel="männlich" itemValue="männlich" />
						</h:selectOneRadio>
						<h:message for="geschlecht" class="alert alert-danger alert-box" />
					</div>
					<div class="form-group has-feedback">
						<h:inputSecret id="password"
							value="#{loginBean.studentBean.password}" class="form-control">
							<f:passThroughAttribute name="placeholder" value="Password" />
						</h:inputSecret>
						<h:message for="password" class="alert alert-danger alert-box" />
						<span class="glyphicon glyphicon-lock form-control-feedback"></span>
					</div>
					<div class="form-group has-feedback">
						<h:inputSecret id="password2"
							value="#{loginBean.studentBean.password}" class="form-control">
							<f:passThroughAttribute name="placeholder"
								value="Retype password" />
						</h:inputSecret>
						<h:message for="password2" class="alert alert-danger alert-box" />
						<span class="glyphicon glyphicon-log-in form-control-feedback">
						</span>
					</div>
					<div class="row">
						<div class="col-xs-8">
							<div class="checkbox icheck">
								<label> <h:selectBooleanCheckbox id="agb"
										value="#{loginBean.studentBean.agb}" /> <h:message for="agb"
										class="alert alert-danger alert-box" /> <!--  <input type="checkbox" />  -->
									AGB akzeptieren
								</label>
							</div>
						</div>
						<!-- /.col -->
						<div class="col-xs-4">
							<h:commandButton id="button" value="Register"
								binding="#{loginBean.button}" action="#{loginBean.login}"
								class="btn btn-primary btn-block btn-flat" />
							<h:message for="button" class="alert alert-danger alert-box" />
						</div>
						<!-- /.col -->
					</div>
				</h:form>

				<h:form>
					<h:commandLink value="I already have a membership" action="login" />
				</h:form>
			</div>
			<!-- /.form-box -->
		</div>
		<!-- /.register-box -->
	</ui:define>

	<ui:define name="javascript">
		<!-- iCheck -->
		<h:outputScript name="icheck.min.js" library="js" />
		<h:outputScript>
		$(function() {
			$('input').iCheck({
				checkboxClass : 'icheckbox_square-blue',
				radioClass : 'iradio_square-blue',
				increaseArea : '20%' // optional
			});
		});
		</h:outputScript>

	</ui:define>

</ui:composition>